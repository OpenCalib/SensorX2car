# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.5)
   message(FATAL_ERROR "CMake >= 2.6.0 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.6...3.19)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_targetsDefined)
set(_targetsNotDefined)
set(_expectedTargets)
foreach(_expectedTarget g2o::csparse g2o::freeglut_minimal g2o::stuff g2o::opengl_helper g2o::core g2o::g2o_cli_library g2o::g2o_cli_application g2o::g2o_hierarchical_library g2o::g2o_simulator_library g2o::g2o_simulator2d_application g2o::g2o_simulator3d_application g2o::g2o_anonymize_observations_application g2o::types_data g2o::types_slam2d g2o::types_slam3d g2o::types_sba g2o::types_sim3 g2o::types_icp g2o::types_sclam2d g2o::types_slam2d_addons g2o::types_slam3d_addons g2o::solver_pcg g2o::solver_dense g2o::solver_structure_only g2o::solver_csparse g2o::csparse_extension g2o::solver_slam2d_linear g2o::solver_eigen)
  list(APPEND _expectedTargets ${_expectedTarget})
  if(NOT TARGET ${_expectedTarget})
    list(APPEND _targetsNotDefined ${_expectedTarget})
  endif()
  if(TARGET ${_expectedTarget})
    list(APPEND _targetsDefined ${_expectedTarget})
  endif()
endforeach()
if("${_targetsDefined}" STREQUAL "${_expectedTargets}")
  unset(_targetsDefined)
  unset(_targetsNotDefined)
  unset(_expectedTargets)
  set(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT "${_targetsDefined}" STREQUAL "")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_targetsDefined}\nTargets not yet defined: ${_targetsNotDefined}\n")
endif()
unset(_targetsDefined)
unset(_targetsNotDefined)
unset(_expectedTargets)


# Compute the installation prefix relative to this file.
get_filename_component(_IMPORT_PREFIX "${CMAKE_CURRENT_LIST_FILE}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
if(_IMPORT_PREFIX STREQUAL "/")
  set(_IMPORT_PREFIX "")
endif()

# Create imported target g2o::csparse
add_library(g2o::csparse SHARED IMPORTED)

set_target_properties(g2o::csparse PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/usr/local/include"
)

# Create imported target g2o::freeglut_minimal
add_library(g2o::freeglut_minimal SHARED IMPORTED)

set_target_properties(g2o::freeglut_minimal PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/usr/local/include"
  INTERFACE_LINK_LIBRARIES "OpenGL::GL;OpenGL::GLU"
)

# Create imported target g2o::stuff
add_library(g2o::stuff SHARED IMPORTED)

set_target_properties(g2o::stuff PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/usr/local/include"
)

# Create imported target g2o::opengl_helper
add_library(g2o::opengl_helper SHARED IMPORTED)

set_target_properties(g2o::opengl_helper PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/usr/local/include"
)

# Create imported target g2o::core
add_library(g2o::core SHARED IMPORTED)

set_target_properties(g2o::core PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/usr/local/include"
)

# Create imported target g2o::g2o_cli_library
add_library(g2o::g2o_cli_library SHARED IMPORTED)

set_target_properties(g2o::g2o_cli_library PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/usr/local/include"
)

# Create imported target g2o::g2o_cli_application
add_executable(g2o::g2o_cli_application IMPORTED)

set_target_properties(g2o::g2o_cli_application PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/usr/local/include"
)

# Create imported target g2o::g2o_hierarchical_library
add_library(g2o::g2o_hierarchical_library SHARED IMPORTED)

set_target_properties(g2o::g2o_hierarchical_library PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/usr/local/include"
)

# Create imported target g2o::g2o_simulator_library
add_library(g2o::g2o_simulator_library SHARED IMPORTED)

set_target_properties(g2o::g2o_simulator_library PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/usr/local/include"
)

# Create imported target g2o::g2o_simulator2d_application
add_executable(g2o::g2o_simulator2d_application IMPORTED)

set_target_properties(g2o::g2o_simulator2d_application PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/usr/local/include"
)

# Create imported target g2o::g2o_simulator3d_application
add_executable(g2o::g2o_simulator3d_application IMPORTED)

set_target_properties(g2o::g2o_simulator3d_application PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/usr/local/include"
)

# Create imported target g2o::g2o_anonymize_observations_application
add_executable(g2o::g2o_anonymize_observations_application IMPORTED)

set_target_properties(g2o::g2o_anonymize_observations_application PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/usr/local/include"
)

# Create imported target g2o::types_data
add_library(g2o::types_data SHARED IMPORTED)

set_target_properties(g2o::types_data PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/usr/local/include"
)

# Create imported target g2o::types_slam2d
add_library(g2o::types_slam2d SHARED IMPORTED)

set_target_properties(g2o::types_slam2d PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/usr/local/include"
)

# Create imported target g2o::types_slam3d
add_library(g2o::types_slam3d SHARED IMPORTED)

set_target_properties(g2o::types_slam3d PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/usr/local/include"
)

# Create imported target g2o::types_sba
add_library(g2o::types_sba SHARED IMPORTED)

set_target_properties(g2o::types_sba PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/usr/local/include"
)

# Create imported target g2o::types_sim3
add_library(g2o::types_sim3 SHARED IMPORTED)

set_target_properties(g2o::types_sim3 PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/usr/local/include"
)

# Create imported target g2o::types_icp
add_library(g2o::types_icp SHARED IMPORTED)

set_target_properties(g2o::types_icp PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/usr/local/include"
)

# Create imported target g2o::types_sclam2d
add_library(g2o::types_sclam2d SHARED IMPORTED)

# Create imported target g2o::types_slam2d_addons
add_library(g2o::types_slam2d_addons SHARED IMPORTED)

set_target_properties(g2o::types_slam2d_addons PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/usr/local/include"
)

# Create imported target g2o::types_slam3d_addons
add_library(g2o::types_slam3d_addons SHARED IMPORTED)

set_target_properties(g2o::types_slam3d_addons PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/usr/local/include"
)

# Create imported target g2o::solver_pcg
add_library(g2o::solver_pcg SHARED IMPORTED)

set_target_properties(g2o::solver_pcg PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/usr/local/include"
)

# Create imported target g2o::solver_dense
add_library(g2o::solver_dense SHARED IMPORTED)

set_target_properties(g2o::solver_dense PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/usr/local/include"
)

# Create imported target g2o::solver_structure_only
add_library(g2o::solver_structure_only SHARED IMPORTED)

set_target_properties(g2o::solver_structure_only PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/usr/local/include"
)

# Create imported target g2o::solver_csparse
add_library(g2o::solver_csparse SHARED IMPORTED)

set_target_properties(g2o::solver_csparse PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/usr/local/include"
)

# Create imported target g2o::csparse_extension
add_library(g2o::csparse_extension SHARED IMPORTED)

set_target_properties(g2o::csparse_extension PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/usr/local/include"
)

# Create imported target g2o::solver_slam2d_linear
add_library(g2o::solver_slam2d_linear SHARED IMPORTED)

set_target_properties(g2o::solver_slam2d_linear PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/usr/local/include"
)

# Create imported target g2o::solver_eigen
add_library(g2o::solver_eigen SHARED IMPORTED)

set_target_properties(g2o::solver_eigen PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/usr/local/include"
)

if(CMAKE_VERSION VERSION_LESS 2.8.12)
  message(FATAL_ERROR "This file relies on consumers using CMake 2.8.12 or greater.")
endif()

# Load information for each installed configuration.
get_filename_component(_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)
file(GLOB CONFIG_FILES "${_DIR}/g2oTargets-*.cmake")
foreach(f ${CONFIG_FILES})
  include(${f})
endforeach()

# Cleanup temporary variables.
set(_IMPORT_PREFIX)

# Loop over all imported files and verify that they actually exist
foreach(target ${_IMPORT_CHECK_TARGETS} )
  foreach(file ${_IMPORT_CHECK_FILES_FOR_${target}} )
    if(NOT EXISTS "${file}" )
      message(FATAL_ERROR "The imported target \"${target}\" references the file
   \"${file}\"
but this file does not exist.  Possible reasons include:
* The file was deleted, renamed, or moved to another location.
* An install or uninstall procedure did not complete successfully.
* The installation package was faulty and contained
   \"${CMAKE_CURRENT_LIST_FILE}\"
but not all the files it references.
")
    endif()
  endforeach()
  unset(_IMPORT_CHECK_FILES_FOR_${target})
endforeach()
unset(_IMPORT_CHECK_TARGETS)

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
